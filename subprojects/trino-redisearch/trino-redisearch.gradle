plugins {
    id 'com.palantir.docker' 
}

dependencies {
    compileOnly group: 'io.trino', name: 'trino-spi', version: trinoVersion
    implementation group: 'io.trino', name: 'trino-plugin-toolkit', version: trinoVersion
    implementation group: 'io.airlift', name: 'bootstrap', version: airliftVersion
    implementation group: 'io.airlift', name: 'configuration', version: airliftVersion
    implementation group: 'io.airlift', name: 'json', version: airliftVersion
    implementation group: 'com.redis', name: 'lettucemod', version: lettucemodVersion
    implementation group: 'com.github.f4b6a3', name: 'ulid-creator', version: ulidVersion
    implementation group: 'javax.validation', name: 'validation-api', version: validationVersion
    testImplementation group: 'com.redis', name: 'lettucemod', version: lettucemodVersion, classifier: 'tests'
    testImplementation(group: 'com.redis.testcontainers', name: 'testcontainers-redis-junit', version: testcontainersRedisVersion) {
        exclude group: 'com.redis', module: 'lettucemod'
        exclude group: 'org.junit.jupiter', module: 'junit-jupiter-api'
    }
    testImplementation group: 'io.airlift', name: 'testing', version: airliftVersion
    testImplementation(group: 'io.trino', name: 'trino-testing', version: trinoVersion) {
    	exclude group: 'org.testcontainers', module: 'testcontainers-java'
    }    
}

test {
    useTestNG()
}

docker {
    name 'jruaux/trino-redisearch:version'
    tags 'latest'
    files tasks.distTar.outputs
    copySpec.from("src/main/docker/setup").into("setup")
    dockerfile file('src/main/docker/Dockerfile')
    buildArgs([TRINO_VERSION: trinoVersion, BUILD_VERSION: project.version])
}

dockerfileZip {
baseName 'dockerfile'
}

eclipse {
    project {
        name = 'redis-sql-trino-redisearch'
    }
}